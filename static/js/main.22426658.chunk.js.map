{"version":3,"sources":["constants/routes.js","firebase/firebase.js","firebase/auth.js","firebase/db.js","components/SignOut.js","components/AuthUserContext.js","components/Navigation.js","components/Landing.js","components/SignUp.js","components/PasswordForget.js","components/SignIn.js","components/withAuthorization.js","components/Home.js","components/PasswordChange.js","components/Account.js","components/App.js","components/withAuthentication.js","serviceWorker.js","index.js"],"names":["HOME","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db1","firestore","db","database","auth","facebookProvider","FacebookAuthProvider","doCreateUserWithEmailAndPassword","email","password","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordChange","currentUser","updatePassword","doFacebookSignIn","signInWithPopup","doCreateUser","id","username","ref","concat","set","onceGetUsers","once","doGetAnUnser","uid","SignOutButton","react_default","a","createElement","reactstrap_es","color","onClick","AuthUserContext","React","createContext","NavigationNonAuth","dark","expand","Link","to","className","navbar","Navigation","components_AuthUserContext","Consumer","authUser","Navigation_NavigationAuth","userInfo","Navigation_NavigationNonAuth","NavigationAuth","_ref","light","routes","providerData","providerId","SignOut","LandingPage","href","role","INITIAL_STATE","passwordOne","passwordTwo","error","showingAlert","byPropKey","propertyName","value","Object","defineProperty","SignUpForm","state","onSubmit","event","_this$state","_this","history","props","then","user","setState","objectSpread","push","catch","timer","err","preventDefault","setTimeout","_this2","this","_this$state2","isInvalid","onLoad","message","for","type","name","placeholder","onChange","e","target","disabled","Component","SignUpLink","withRouter","SignUp_SignUpForm","PasswordForgetForm","PasswordForgetLink","PasswordForget","PasswordForget_PasswordForgetForm","SignInForm","facebookLogin","console","log","displayName","lib","SignIn_SignInForm","SignUp_SignUpLink","PasswordForget_PasswordForgetLink","withAuthorization","authCondition","WithAuthorization","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","onAuthStateChanged","assign","loggedUser","HomePage","users","aadhar","phone","nominee","nomineephone","relation","loading","avatar","isUploading","progress","avatarURL","handleUploadStart","handleProgress","handleUploadError","handleUploadSuccess","filename","storage","child","getDownloadURL","url","collection","add","window","location","alert","res","val","_this3","class","required","src","alt","style","marginTop","marginBottom","react_firebase_file_uploader_lib_default","accept","randomizeFilename","storageRef","onUploadStart","onUploadError","onUploadSuccess","onProgress","PasswordChangeForm","doPasswordUpdate","PasswordChange","withAuthentication","WithAuthentication","_getPrototypeOf2","_len","args","Array","_key","call","Provider","BrowserRouter","components_Navigation","Route","exact","path","component","SignUpPage","SignInPage","PasswordForgetPage","AccountPage","Boolean","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.22426658.chunk.js","sourcesContent":["export const SIGN_UP = \"/signup\";\nexport const SIGN_IN = \"/signin\";\nexport const LANDING = \"/Covisurance\";\nexport const HOME = \"/home\";\nexport const ACCOUNT = \"/account\";\nexport const PASSWORD_FORGET = \"/pw-forget\";\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/firestore\";\n\n//this config is being used for both development and production environment. Though, it is a best practice creating a second project and have two configs: one for production (prodConfig) and another for development (devConfig), so you choose the config based on the environment.\n\nconst config = {\n  apiKey: \"AIzaSyDlWBJxDBtvNwnxpTlCF4fNJmzdObGoV-E\",\n    authDomain: \"covisurance.firebaseapp.com\",\n    databaseURL: \"https://covisurance-default-rtdb.firebaseio.com\",\n    projectId: \"covisurance\",\n    storageBucket: \"covisurance.appspot.com\",\n    messagingSenderId: \"899802696676\",\n    appId: \"1:899802696676:web:fb8e0f4223c064d22cd5f1\",\n    measurementId: \"G-VMSK2QW51H\"\n};\n\n\nif (!firebase.apps.length) {\n  //initializing with the config object\n  firebase.initializeApp(config);\n}\n\n//separting database API and authentication\nconst db1 = firebase.firestore();\nconst db = firebase.database();\nconst auth = firebase.auth();\n\nconst facebookProvider = new firebase.auth.FacebookAuthProvider();\n\nexport { db, db1, auth, facebookProvider };\n","import { auth, facebookProvider } from \"./firebase\"; //importing the previously instatiated object from the firebase.js config file\n\n//## below the authentication functions ##\n\n//sign up\nexport const doCreateUserWithEmailAndPassword = (email, password) =>\n  auth.createUserWithEmailAndPassword(email, password);\n\n//sign in\nexport const doSignInWithEmailAndPassword = (email, password) =>\n  auth.signInWithEmailAndPassword(email, password);\n\n//sign out\nexport const doSignOut = () => auth.signOut();\n\n//## below are two more functions, for resetting or changing passwords ##\n\n//password reset\nexport const doPasswordReset = email => auth.sendPasswordResetEmail(email);\n\n//password change\nexport const doPasswordChange = password =>\n  auth.currentUser.updatePassword(password);\n\n//#### for\n//     facebook #####\nexport const doFacebookSignIn = () => auth.signInWithPopup(facebookProvider);\n","//this is going to store Firebase realtime database API code\nimport { db } from \"./firebase\";\n\n//##########3 user API\n\n//create an user and store it at users/id path (it's an asynchronous func)\nexport const doCreateUser = (id, username, email) =>\n  db.ref(`users/${id}`).set({\n    username,\n    email\n  });\n\n//returns all users from firebase realtime db\nexport const onceGetUsers = () => db.ref(\"users\").once(\"value\");\n\nexport const doGetAnUnser = uid => db.ref(`users/${uid}`).once(\"value\");\n\n// other APIs could come below\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\n\nimport { auth } from \"../firebase\";\n\nconst SignOutButton = () => (\n  <Button color=\"info\" onClick={auth.doSignOut}>\n    Sign Out\n  </Button>\n);\n\nexport default SignOutButton;\n","import React from \"react\";\n\nconst AuthUserContext = React.createContext(null); //using React's Context API\n\nexport default AuthUserContext;\n","import React from \"react\";\nimport { Navbar, NavbarBrand, Nav, NavItem, NavLink } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport SignOutButton from \"./SignOut\";\nimport * as routes from \"../constants/routes\";\nimport '../bootstrap/css/bootstrap.min.css';\nimport AuthUserContext from \"./AuthUserContext\";\n\nconst Navigation = () => (\n  <AuthUserContext.Consumer>\n    {authUser =>\n      authUser ? <NavigationAuth userInfo={authUser} /> : <NavigationNonAuth />\n    }\n  </AuthUserContext.Consumer>\n);\n\nconst NavigationNonAuth = () => (\n  <Navbar color=\"light\" dark expand=\"md\">\n    <NavbarBrand>\n      <Link to={routes.LANDING}> COVISURANCE </Link>\n    </NavbarBrand>\n    <Nav className=\"ml-auto\" navbar>\n      <NavItem>\n        <NavLink>\n          <Link to={routes.SIGN_IN} className=\"btn btn-primary\">Sign In</Link>\n        </NavLink>\n      </NavItem>\n    </Nav>\n  </Navbar>\n);\n\nexport default Navigation;\n\nconst NavigationAuth = ({ userInfo }) => (\n  <Navbar color=\"light\" light expand=\"md\">\n    <NavbarBrand>\n      <Link to={routes.LANDING}> COVISURANCE </Link>\n    </NavbarBrand>\n    <Nav className=\"ml-auto\" navbar>\n      <NavItem>\n        <NavLink>\n          <Link to={routes.HOME}>Home</Link>\n        </NavLink>\n      </NavItem>\n      {userInfo.providerData[0].providerId === \"facebook.com\" ? null : (\n        <NavItem>\n          <NavLink>\n            <Link to={routes.ACCOUNT}>Account</Link>\n          </NavLink>\n        </NavItem>\n      )}\n      <NavItem>\n        <SignOutButton />\n      </NavItem>\n    </Nav>\n  </Navbar>\n);\n\n// const NavigationAuth = ({ userInfo }) => (\n//   <ul>\n//     {/* {console.log(\"NavigationAuth\", userInfo)} */}\n//     <li>\n//       <Link to={routes.LANDING}>Landing</Link>\n//     </li>\n//     <li>\n//       <Link to={routes.HOME}>Home</Link>\n//     </li>\n//     {/* disabling password changes/resets if user is logged in through facebook */}\n//     {userInfo.providerData[0].providerId === \"facebook.com\" ? null : (\n//       <li>\n//         <Link to={routes.ACCOUNT}>Account</Link>\n//       </li>\n//     )}\n//     <li>\n//       <SignOutButton />\n//     </li>\n//   </ul>\n// );\n\n// const NavigationNonAuth = () => (\n//   <ul>\n//     <li>\n//       <Link to={routes.LANDING}>Landing</Link>\n//     </li>\n//     <li>\n//       <Link to={routes.SIGN_IN}>Sign In</Link>\n//     </li>\n//   </ul>\n// );\n","import React from \"react\";\nimport '../bootstrap/css/bootstrap.min.css'\n\nconst LandingPage = () => (\n  <div className=\"jumbotron\">\n  <h1 className=\"display-4\">COVISURANCE</h1>\n  <p className=\"lead\">Your personal COVID Insurance</p>\n  <hr className=\"my-4\" />\n  <p>Fill in your details and get instant insurance in your wallet.</p>\n  <p className=\"lead\">\n    <a className=\"btn btn-primary btn-lg\" href=\"signin\" role=\"button\">Get Started</a>\n  </p>\n  </div>\n);\n\nexport default LandingPage;\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Button, Form, FormGroup, Label, Input, Alert } from \"reactstrap\";\n\nimport * as routes from \"../constants/routes\";\nimport { auth, db } from \"../firebase\";\n\nconst SignUpPage = ({ history }) => (\n  <div>\n    <div className=\"div-flex\">\n      <div>\n        <h1 className=\"centered\">Sign Up</h1>\n        <SignUpForm history={history} />\n      </div>\n    </div>\n  </div>\n);\n\n//################### Sign Up Form ###################\nconst INITIAL_STATE = {\n  username: \"\",\n  email: \"\",\n  passwordOne: \"\",\n  passwordTwo: \"\",\n  error: null,\n  showingAlert: false\n};\n\n//A Higher order function with prop name as key and the value to be assigned to\nconst byPropKey = (propertyName, value) => () => ({\n  [propertyName]: value\n});\n\nclass SignUpForm extends Component {\n  //defining state\n  state = {\n    ...INITIAL_STATE\n  };\n\n  // onChange = (propName, value) => {\n  //   this.setState({\n  //     [propName]: value\n  //   });\n  // };\n\n  onSubmit = event => {\n    const { username, email, passwordOne } = this.state;\n    const { history } = this.props;\n    auth\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      //it the above functions resolves, reset the state to its initial state values, otherwise, set the error object\n      .then(authUser => {\n        //creating a user in the database after the sign up through Firebase auth API\n        db.doCreateUser(authUser.user.uid, username, email)\n          .then(() => {\n            this.setState({\n              ...INITIAL_STATE\n            });\n            history.push(routes.HOME); //redirects to Home Page\n          })\n          .catch(error => {\n            this.setState(byPropKey(\"error\", error));\n            this.timer(); //show alert message for some seconds\n          });\n      })\n      .catch(err => {\n        this.setState(byPropKey(\"error\", err));\n        this.timer(); //show alert message for some seconds\n      });\n\n    event.preventDefault(); //prevents refreshing\n  };\n\n  timer = () => {\n    this.setState({\n      showingAlert: true\n    });\n\n    setTimeout(() => {\n      this.setState({\n        showingAlert: false\n      });\n    }, 4000);\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error,\n      showingAlert\n    } = this.state;\n    //a boolen to perform validation\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === \"\" ||\n      email === \"\" ||\n      username === \"\";\n\n    return (\n      <div>\n        {showingAlert && (\n          <Alert color=\"danger\" onLoad={this.timer}>\n            {error.message}\n          </Alert>\n        )}\n        <Form onSubmit={this.onSubmit}>\n          <FormGroup>\n            <Label for=\"userName\">Full Name</Label>\n            <Input\n              type=\"username\"\n              name=\"username\"\n              id=\"userName\"\n              placeholder=\"John Doe\"\n              value={username}\n              onChange={e =>\n                this.setState(byPropKey(\"username\", e.target.value))\n              }\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"exampleEmail\">Email</Label>\n            <Input\n              type=\"email\"\n              name=\"email\"\n              id=\"exampleEmail\"\n              placeholder=\"user@gmail.com\"\n              value={email}\n              onChange={e => this.setState(byPropKey(\"email\", e.target.value))}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"examplePassword1\">Password</Label>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              id=\"examplePassword1\"\n              placeholder=\"Password\"\n              value={passwordOne}\n              onChange={e =>\n                this.setState(byPropKey(\"passwordOne\", e.target.value))\n              }\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"examplePassword2\">Confirm Password</Label>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              id=\"examplePassword2\"\n              placeholder=\"Confirm Password\"\n              value={passwordTwo}\n              onChange={e =>\n                this.setState(byPropKey(\"passwordTwo\", e.target.value))\n              }\n            />\n          </FormGroup>\n\n          <div className=\"text-center\">\n            <Button disabled={isInvalid} type=\"submit\">\n              Sign Up\n            </Button>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\n//################### Sign Up Link ###################\n//used in the sign in when the user don't have an account registered yet\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={routes.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\n//exports\nexport default withRouter(SignUpPage); //using a HoC to get access to history\nexport { SignUpForm, SignUpLink };\n\n// <form onSubmit={this.onSubmit}>\n//   <input\n//     value={username}\n//     onChange={e => this.setState(byPropKey(\"username\", e.target.value))}\n//     // onChange={e => this.onChange(\"username\", e.target.value)}\n//     type=\"text\"\n//     placeholder=\"Full Name\"\n//   />\n//   <input\n//     value={email}\n//     onChange={e => this.setState(byPropKey(\"email\", e.target.value))}\n//     type=\"text\"\n//     placeholder=\"Email Address\"\n//   />\n//   <input\n//     value={passwordOne}\n//     onChange={e =>\n//       this.setState(byPropKey(\"passwordOne\", e.target.value))\n//     }\n//     type=\"password\"\n//     placeholder=\"Password\"\n//   />\n//   <input\n//     value={passwordTwo}\n//     onChange={e =>\n//       this.setState(byPropKey(\"passwordTwo\", e.target.value))\n//     }\n//     type=\"password\"\n//     placeholder=\"Confirm Password\"\n//   />\n//   <button disabled={isInvalid} type=\"submit\">\n//     Sign Up\n//   </button>\n\n//   {error && <p>{error.message}</p>}\n// </form>\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Form, FormGroup, Label, Input, Alert } from \"reactstrap\";\n\nimport { auth } from \"../firebase\";\nimport * as routes from \"../constants/routes\";\n\n//it resets your password. It doesn’t matter if you are authenticated or not\nconst PasswordForgetPage = () => (\n  <div className=\"div-flex\">\n    <div>\n      <h1 className=\"centered\">Forget Password</h1>\n      <PasswordForgetForm />\n    </div>\n  </div>\n);\n\nconst byPropKey = (propertyName, value) => () => ({\n  [propertyName]: value\n});\n\n//################### PasswordForget Form ###################\nconst INITIAL_STATE = {\n  email: \"\",\n  error: null,\n  showingAlert: false\n};\n\nclass PasswordForgetForm extends Component {\n  state = { ...INITIAL_STATE };\n\n  onSubmit = event => {\n    const { email } = this.state;\n\n    auth\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState(byPropKey(\"error\", error));\n        this.timer(); //show alert message for some seconds\n      });\n\n    event.preventDefault();\n  };\n\n  timer = () => {\n    this.setState({\n      showingAlert: true\n    });\n\n    setTimeout(() => {\n      this.setState({\n        showingAlert: false\n      });\n    }, 4000);\n  };\n\n  render() {\n    const { email, error, showingAlert } = this.state;\n\n    const isInvalid = email === \"\";\n\n    return (\n      <div>\n        {showingAlert && (\n          <Alert color=\"danger\" onLoad={this.timer}>\n            {error.message}\n          </Alert>\n        )}\n\n        <Form onSubmit={this.onSubmit}>\n          <FormGroup>\n            <Label for=\"exampleEmail\">Email</Label>\n            <Input\n              type=\"email\"\n              name=\"email\"\n              id=\"exampleEmail\"\n              placeholder=\"user@gmail.com\"\n              value={email}\n              onChange={event =>\n                this.setState(byPropKey(\"email\", event.target.value))\n              }\n            />\n          </FormGroup>\n\n          <div className=\"text-center\">\n            <Button disabled={isInvalid} type=\"submit\">\n              Reset My Password\n            </Button>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\n//################### PasswordForget Link ###################\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={routes.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport default PasswordForgetPage;\n\nexport { PasswordForgetForm, PasswordForgetLink };\n\n// <form onSubmit={this.onSubmit}>\n//   <input\n//     value={this.state.email}\n//     onChange={event =>\n//       this.setState(byPropKey(\"email\", event.target.value))\n//     }\n//     type=\"text\"\n//     placeholder=\"Email Address\"\n//   />\n//   <button disabled={isInvalid} type=\"submit\">\n//     Reset My Password\n//   </button>\n\n//   {error && <p>{error.message}</p>}\n// </form>\n","import React, { Component } from \"react\";\nimport { Button, Form, FormGroup, Label, Input, Alert } from \"reactstrap\";\nimport { FacebookLoginButton } from \"react-social-login-buttons\";\n\nimport { withRouter } from \"react-router-dom\";\n\nimport { SignUpLink } from \"./SignUp\";\nimport { PasswordForgetLink } from \"./PasswordForget\";\nimport { auth, db } from \"../firebase\";\nimport * as routes from \"../constants/routes\";\n\nconst SignInPage = ({ history }) => {\n  return (\n    <div className=\"div-flex\">\n      <div>\n        <h1 className=\"centered\">Sign In</h1>\n        {/* <img src={logo} className=\"App-logo\" alt=\"My logo\" /> */}\n\n        <SignInForm history={history} />\n        <SignUpLink />\n        <PasswordForgetLink />\n      </div>\n    </div>\n  );\n};\n\nconst byPropKey = (propertyName, value) => () => ({\n  [propertyName]: value\n});\n\nconst INITIAL_STATE = {\n  email: \"\",\n  password: \"\",\n  error: null,\n  showingAlert: false\n};\n\nclass SignInForm extends Component {\n  state = { ...INITIAL_STATE };\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    const { history } = this.props;\n\n    auth\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        history.push(routes.HOME);\n      })\n      .catch(error => {\n        this.setState(byPropKey(\"error\", error));\n        this.timer(); //defined below\n      });\n\n    event.preventDefault();\n  };\n\n  facebookLogin = () => {\n    const { history } = this.props;\n    auth\n      .doFacebookSignIn()\n      .then(authUser => {\n        console.log(\"authUser\", authUser);\n\n        db.doCreateUser(\n          //store some info from facebook into the firebase db\n          authUser.user.uid,\n          authUser.user.displayName,\n          authUser.user.email\n        )\n          .then(() => {\n            // this.setState({\n            //   ...INITIAL_STATE\n            // });\n            history.push(routes.HOME); //redirects to Home Page\n          })\n          .catch(error => {\n            this.setState(byPropKey(\"error\", error));\n          });\n      })\n      .catch(error => {\n        this.setState(byPropKey(\"error\", error));\n      });\n  };\n\n  timer = () => {\n    this.setState({\n      showingAlert: true\n    });\n\n    setTimeout(() => {\n      this.setState({\n        showingAlert: false\n      });\n    }, 4000);\n  };\n\n  render() {\n    const { email, password, error, showingAlert } = this.state;\n\n    const isInvalid = password === \"\" || email === \"\";\n\n    return (\n      <div>\n        {showingAlert && (\n          <Alert color=\"danger\" onLoad={this.timer}>\n            {error.message}\n          </Alert>\n        )}\n\n        <Form onSubmit={this.onSubmit}>\n          <FormGroup>\n            <Label for=\"exampleEmail\">Email</Label>\n            <Input\n              type=\"email\"\n              name=\"email\"\n              id=\"exampleEmail\"\n              placeholder=\"user@gmail.com\"\n              value={email}\n              onChange={event =>\n                this.setState(byPropKey(\"email\", event.target.value))\n              }\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"examplePassword\">Password</Label>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              id=\"examplePassword\"\n              placeholder=\"pass-test\"\n              value={password}\n              onChange={event =>\n                this.setState(byPropKey(\"password\", event.target.value))\n              }\n            />\n          </FormGroup>\n\n          <div className=\"text-center\">\n            <Button disabled={isInvalid} type=\"submit\">\n              Sign In\n            </Button>\n          </div>\n        </Form>\n\n        <hr />\n\n        <FacebookLoginButton onClick={this.facebookLogin} />\n        {/* <button onClick={this.facebookLogin}>Login with Facebook</button> */}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SignInPage);\n\nexport { SignInForm };\n\n\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport AuthUserContext from \"./AuthUserContext\";\nimport { firebase } from \"../firebase\";\nimport * as routes from \"../constants/routes\";\n\nconst withAuthorization = authCondition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      firebase.auth.onAuthStateChanged(authUser => {\n        if (!authCondition(authUser)) {\n          //if the authorization fails, redirects to sign in page\n          this.props.history.push(routes.SIGN_IN);\n        }\n      });\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {/* it either renders the passed component or not */}\n          {authUser =>\n            authUser ? (\n              <Component {...this.props} loggedUser={authUser} />\n            ) : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return withRouter(WithAuthorization); //using withRouter so we have access to history props\n};\n\nexport default withAuthorization;\n","import React, { Component } from \"react\";\nimport \"../bootstrap/css/bootstrap.min.css\";\nimport withAuthorization from \"./withAuthorization\";\nimport { db } from \"../firebase\";\nimport { db1 } from \"../firebase/firebase\";\nimport FileUploader from \"react-firebase-file-uploader\";\nimport firebase from \"firebase\";\n\n//A Higher order function with prop name as key and the value to be assigned to\nconst byPropKey = (propertyName, value) => () => ({\n  [propertyName]: value,\n});\n\nclass HomePage extends Component {\n  state = {\n    users: null,\n    username: \"\",\n    aadhar: 0,\n    phone: 0,\n    nominee: \"\",\n    nomineephone: 0,\n    relation: \"\",\n    loading: true,\n    avatar: \"\",\n    isUploading: false,\n    progress: 0,\n    avatarURL: \"\",\n  };\n\n  componentDidMount() {\n    // , db1.onceGetUsers().then(res => {\n    //   this.setState({\n    //     users: res.val()\n    //   });\n    // });\n\n    const { loggedUser } = this.props;\n    db.doGetAnUnser(loggedUser.uid).then((res) => {\n      this.setState({\n        username: res.val().username,\n        loading: false,\n      });\n    });\n  }\n\n  handleUploadStart = () => this.setState({ isUploading: true, progress: 0 });\n  handleProgress = (progress) => this.setState({ progress });\n  handleUploadError = (error) => {\n    this.setState({ isUploading: false });\n    console.error(error);\n  };\n  handleUploadSuccess = (filename) => {\n    this.setState({ avatar: filename, progress: 100, isUploading: false });\n    firebase\n      .storage()\n      .ref(\"documents\")\n      .child(filename)\n      .getDownloadURL()\n      .then((url) => this.setState({ avatarURL: url }));\n  };\n\n  onSubmit = (event, history) => {\n    const { aadhar, phone, nominee, nomineephone, relation, avatar } = this.state;\n\n    event.preventDefault();\n    this.setState({\n      loading: true,\n    });\n\n    db1\n      .collection(\"insurance\")\n      .add({\n        aadhar: aadhar,\n        phone: phone,\n        nominee: nominee,\n        nomineephone: nomineephone,\n        relation: relation,\n        avatar: avatar,\n      })\n      .then(() => {\n        window.location.assign(\"https://www.google.com\")\n        this.setState({\n          loading: false,\n        })\n      })\n      .catch((error) => {\n        alert(\"error.message\");\n        this.setState({\n          loading: false,\n        });\n      });\n  };\n\n  render() {\n    const {\n      username,\n      loading,\n      aadhar,\n      phone,\n      nominee,\n      nomineephone,\n      relation\n    } = this.state;\n\n    // console.log(\"dasdf\", this.props.loggedUser);\n    return (\n      <div>\n        <h1 className=\"display-h1\">Personal Details</h1>\n        {!loading && (\n          <p className=\"centered\">\n            Hello {username}! Kindly fill out this form to continue.\n          </p>\n        )}\n\n        <form onSubmit={this.onSubmit}>\n\n          <div class=\"form-group\">\n            <label>Aadhar Number</label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              name=\"aadhar\"\n              placeholder=\"XXXX-XXXX-XXXX\"\n              value={aadhar}\n              onChange={(e) =>\n                this.setState(byPropKey(\"aadhar\", e.target.value))\n              }\n              required\n            />\n          </div>\n\n          <div class=\"form-group\">\n            <label>Phone Number</label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              name=\"phone\"\n              placeholder=\"9411XXXXXX\"\n              value={phone}\n              onChange={(e) =>\n                this.setState(byPropKey(\"phone\", e.target.value))\n              }\n              required\n            />\n          </div>\n\n          <div class=\"form-group\">\n            <label>Nominee's Name</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              name=\"nominee\"\n              placeholder=\"Nominee\"\n              value={nominee}\n              onChange={(e) =>\n                this.setState(byPropKey(\"nominee\", e.target.value))\n              }\n              required\n            />\n          </div>\n\n          <div class=\"form-group\">\n            <label>Nominee's Phone Number</label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              name=\"nomineephone\"\n              placeholder=\"8708XXXXXX\"\n              value={nomineephone}\n              onChange={(e) =>\n                this.setState(byPropKey(\"nomineephone\", e.target.value))\n              }\n              required\n            />\n          </div>\n\n          <div class=\"form-group\">\n            <label>Relationship</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              name=\"relation\"\n              placeholder=\"Son/Daughter/Wife/Son-in-Law etc.\"\n              value={relation}\n              onChange={(e) =>\n                this.setState(byPropKey(\"relation\", e.target.value))\n              }\n              required\n            />\n          </div>\n\n          <div>\n          <p className=\"lead\">*Upload Image of Death Certificate and Hospital Report</p>\n          <label>Image Preview:</label>\n          {this.state.isUploading && <p>Progress: {this.state.progress}</p>}\n          {this.state.avatarURL && <img src={this.state.avatarURL} alt=\"file\"/>}\n          <div  style={{marginTop:20, marginBottom:20}}>\n          <FileUploader\n            accept=\"documents/*\"\n            name=\"avatar\"\n            randomizeFilename\n            storageRef={firebase.storage().ref(\"documents\")}\n            onUploadStart={this.handleUploadStart}\n            onUploadError={this.handleUploadError}\n            onUploadSuccess={this.handleUploadSuccess}\n            onProgress={this.handleProgress}\n          />\n          </div>\n          </div>\n            <div>\n          <button\n            type=\"submit\"\n            class=\"btn btn-success\"\n          >\n            Submit\n          </button>\n          </div>\n        </form>\n\n        {/* {!!users && <UserList users={users} />} */}\n      </div>\n    );\n  }\n}\n\n// const UserList = ({ users }) => (\n//   <div>\n//     {console.log(\"users\", users)}\n//     <h2>List of Usernames of Users</h2>\n//     <p>(Saved on Sign Up in Firebase Database)</p>\n\n//     {Object.keys(users).map(key => (\n//       <div key={key}>{users[key].username}</div>\n//     ))}\n//   </div>\n// );\n\nconst authCondition = (authUser) => !!authUser;\n\nexport default withAuthorization(authCondition)(HomePage); //grants authorization to open endpoint if an user is signed in\n","import React, { Component } from \"react\";\nimport { Button, Form, FormGroup, Label, Input, Alert } from \"reactstrap\";\n\nimport { auth } from \"../firebase\";\n\nconst byPropKey = (propertyName, value) => () => ({\n  [propertyName]: value\n});\n\nconst INITIAL_STATE = {\n  passwordOne: \"\",\n  passwordTwo: \"\",\n  error: null,\n  showingAlert: false\n};\n\nclass PasswordChangeForm extends Component {\n  state = { ...INITIAL_STATE };\n\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n\n    auth\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState(byPropKey(\"error\", error));\n        this.timer(); //show alert message for some seconds\n      });\n\n    event.preventDefault();\n  };\n\n  timer = () => {\n    this.setState({\n      showingAlert: true\n    });\n\n    setTimeout(() => {\n      this.setState({\n        showingAlert: false\n      });\n    }, 4000);\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error, showingAlert } = this.state;\n\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === \"\";\n\n    return (\n      <div style={{ marginTop: \"40px\" }}>\n        {showingAlert && (\n          <Alert color=\"danger\" onLoad={this.timer}>\n            {error.message}\n          </Alert>\n        )}\n\n        <Form onSubmit={this.onSubmit}>\n          <FormGroup>\n            <Label for=\"examplePassword1\">New Password</Label>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              id=\"examplePassword1\"\n              placeholder=\"New Password\"\n              value={passwordOne}\n              onChange={e =>\n                this.setState(byPropKey(\"passwordOne\", e.target.value))\n              }\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"examplePassword2\">Confirm Password</Label>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              id=\"examplePassword2\"\n              placeholder=\"Confirm Password\"\n              value={passwordTwo}\n              onChange={e =>\n                this.setState(byPropKey(\"passwordTwo\", e.target.value))\n              }\n            />\n          </FormGroup>\n\n          <div className=\"text-center\">\n            <Button disabled={isInvalid} type=\"submit\">\n              Change My Password\n            </Button>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default PasswordChangeForm;\n\n// <form onSubmit={this.onSubmit}>\n//   <input\n//     value={passwordOne}\n//     onChange={event =>\n//       this.setState(byPropKey(\"passwordOne\", event.target.value))\n//     }\n//     type=\"password\"\n//     placeholder=\"New Password\"\n//   />\n//   <input\n//     value={passwordTwo}\n//     onChange={event =>\n//       this.setState(byPropKey(\"passwordTwo\", event.target.value))\n//     }\n//     type=\"password\"\n//     placeholder=\"Confirm New Password\"\n//   />\n//   <button disabled={isInvalid} type=\"submit\">\n//     Change My Password\n//   </button>\n\n//   {error && <p>{error.message}</p>}\n// </form>\n","import React from \"react\";\n\nimport AuthUserContext from \"./AuthUserContext\";\nimport { PasswordForgetForm } from \"./PasswordForget\";\nimport PasswordChangeForm from \"./PasswordChange\";\nimport withAuthorization from \"./withAuthorization\"; //redirects to sign in if user not signed in\n\nconst AccountPage = () => (\n  //authUser is passed down via Context API (It is set at withAuthentication.js file)\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <div className=\"div-flex\">\n        <div>\n          <h5 className=\"centered\">\n            Change/Reset Password for : {authUser.email}\n          </h5>\n          {/* disabling password changes/resets if user is logged in through facebook */}\n          {authUser.providerData[0].providerId === \"facebook.com\" ? null : (\n            <div>\n              <PasswordForgetForm />\n              <PasswordChangeForm />\n            </div>\n          )}\n        </div>\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst authCondition = authUser =>\n  !!authUser && authUser.providerData[0].providerId !== \"facebook.com\"; //true and false\n\nexport default withAuthorization(authCondition)(AccountPage);\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { Container } from \"reactstrap\";\nimport \"./App.css\";\n\nimport * as routes from \"../constants/routes\";\n\n//nav stuff\nimport Navigation from \"./Navigation\";\nimport LandingPage from \"./Landing\";\nimport SignUpPage from \"./SignUp\";\nimport SignInPage from \"./SignIn\";\nimport PasswordForgetPage from \"./PasswordForget\";\nimport HomePage from \"./Home\";\nimport AccountPage from \"./Account\";\n\nimport withAuthentication from \"./withAuthentication\";\n\nconst App = () => (\n  <BrowserRouter>\n    <Container>\n      <Navigation />\n\n      <Route exact path={routes.LANDING} component={LandingPage} />\n      <Route exact path={routes.SIGN_UP} component={SignUpPage} />\n      <Route exact path={routes.SIGN_IN} component={SignInPage} />\n      <Route\n        exact\n        path={routes.PASSWORD_FORGET}\n        component={PasswordForgetPage}\n      />\n      <Route exact path={routes.HOME} component={HomePage} />\n      <Route exact path={routes.ACCOUNT} component={AccountPage} />\n    </Container>\n  </BrowserRouter>\n);\n\nexport default withAuthentication(App); //using HoC to handle session\n","import React from \"react\";\nimport { firebase } from \"../firebase\";\n\nimport AuthUserContext from \"./AuthUserContext\"; //using provider's context api\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    state = {\n      authUser: null\n    };\n\n    componentDidMount() {\n      firebase.auth.onAuthStateChanged(authUser => {\n        authUser\n          ? this.setState({ authUser })\n          : this.setState({ authUser: null });\n      });\n    }\n\n    render() {\n      const { authUser } = this.state;\n      console.log(\"withAuthentication file authUser\", authUser);\n      return (\n        //   passing down the authUser value, so other components can consume it\n        <AuthUserContext.Provider value={authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return WithAuthentication;\n};\n\nexport default withAuthentication;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './bootstrap/css/bootstrap.min.css'\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}